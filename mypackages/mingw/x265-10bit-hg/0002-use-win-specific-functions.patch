diff -r 7252c10278a1 source/common/threading.h
--- a/source/common/threading.h	Mon Feb 23 23:11:49 2015 -0600
+++ b/source/common/threading.h	Wed Feb 25 06:47:56 2015 +0900
@@ -42,7 +42,20 @@
 #include <sys/sysctl.h>
 #endif
 
-#ifdef __GNUC__               /* GCCs builtin atomics */
+#ifdef __MSVCRT__       /* Windows atomic intrinsics */
+
+#include <intrin.h>
+
+#define CLZ(id, x)            _BitScanReverse(&id, x)
+#define CTZ(id, x)            _BitScanForward(&id, x)
+#define ATOMIC_INC(ptr)       InterlockedIncrement((volatile LONG*)ptr)
+#define ATOMIC_DEC(ptr)       InterlockedDecrement((volatile LONG*)ptr)
+#define ATOMIC_ADD(ptr, val)  InterlockedExchangeAdd((volatile LONG*)ptr, val)
+#define ATOMIC_OR(ptr, mask)  _InterlockedOr((volatile LONG*)ptr, (LONG)mask)
+#define ATOMIC_AND(ptr, mask) _InterlockedAnd((volatile LONG*)ptr, (LONG)mask)
+#define GIVE_UP_TIME()        Sleep(0)
+
+#elif defined(__GNUC__)               /* GCCs builtin atomics */
 
 #include <sys/time.h>
 #include <unistd.h>
@@ -56,20 +69,7 @@
 #define ATOMIC_ADD(ptr, val)  __sync_fetch_and_add((volatile int32_t*)ptr, val)
 #define GIVE_UP_TIME()        usleep(0)
 
-#elif defined(_MSC_VER)       /* Windows atomic intrinsics */
-
-#include <intrin.h>
-
-#define CLZ(id, x)            _BitScanReverse(&id, x)
-#define CTZ(id, x)            _BitScanForward(&id, x)
-#define ATOMIC_INC(ptr)       InterlockedIncrement((volatile LONG*)ptr)
-#define ATOMIC_DEC(ptr)       InterlockedDecrement((volatile LONG*)ptr)
-#define ATOMIC_ADD(ptr, val)  InterlockedExchangeAdd((volatile LONG*)ptr, val)
-#define ATOMIC_OR(ptr, mask)  _InterlockedOr((volatile LONG*)ptr, (LONG)mask)
-#define ATOMIC_AND(ptr, mask) _InterlockedAnd((volatile LONG*)ptr, (LONG)mask)
-#define GIVE_UP_TIME()        Sleep(0)
-
-#endif // ifdef __GNUC__
+#endif // ifdef __MSVCRT__
 
 namespace x265 {
 // x265 private namespace
diff -r 7252c10278a1 source/common/threadpool.cpp
--- a/source/common/threadpool.cpp	Mon Feb 23 23:11:49 2015 -0600
+++ b/source/common/threadpool.cpp	Wed Feb 25 06:47:56 2015 +0900
@@ -29,19 +29,19 @@
 
 #if X86_64
 
-#ifdef __GNUC__
+#ifdef __MSVCRT__
+
+#define SLEEPBITMAP_CTZ(id, x)     _BitScanForward64(&id, x)
+#define SLEEPBITMAP_OR(ptr, mask)  InterlockedOr64((volatile LONG64*)ptr, (LONG)mask)
+#define SLEEPBITMAP_AND(ptr, mask) InterlockedAnd64((volatile LONG64*)ptr, (LONG)mask)
+
+#elif defined(__GNUC__)
 
 #define SLEEPBITMAP_CTZ(id, x)     id = (unsigned long)__builtin_ctzll(x)
 #define SLEEPBITMAP_OR(ptr, mask)  __sync_fetch_and_or(ptr, mask)
 #define SLEEPBITMAP_AND(ptr, mask) __sync_fetch_and_and(ptr, mask)
 
-#elif defined(_MSC_VER)
-
-#define SLEEPBITMAP_CTZ(id, x)     _BitScanForward64(&id, x)
-#define SLEEPBITMAP_OR(ptr, mask)  InterlockedOr64((volatile LONG64*)ptr, (LONG)mask)
-#define SLEEPBITMAP_AND(ptr, mask) InterlockedAnd64((volatile LONG64*)ptr, (LONG)mask)
-
-#endif // ifdef __GNUC__
+#endif // ifdef __MSVCRT__
 
 #else
 
diff -r 7252c10278a1 source/common/winxp.h
--- a/source/common/winxp.h	Mon Feb 23 23:11:49 2015 -0600
+++ b/source/common/winxp.h	Wed Feb 25 06:47:56 2015 +0900
@@ -26,7 +26,7 @@
 
 #if defined(_WIN32) && (_WIN32_WINNT < 0x0600) // _WIN32_WINNT_VISTA
 
-#ifdef _MSC_VER
+#ifdef __MSVCRT__
 #include <intrin.h> // _InterlockedCompareExchange64
 #endif
 
diff -r 7252c10278a1 source/encoder/search.cpp
--- a/source/encoder/search.cpp	Mon Feb 23 23:11:49 2015 -0600
+++ b/source/encoder/search.cpp	Wed Feb 25 06:47:56 2015 +0900
@@ -35,7 +35,7 @@
 
 using namespace x265;
 
-#if _MSC_VER
+#ifdef _MSC_VER
 #pragma warning(disable: 4800) // 'uint8_t' : forcing value to bool 'true' or 'false' (performance warning)
 #pragma warning(disable: 4244) // '=' : conversion from 'int' to 'uint8_t', possible loss of data)
 #pragma warning(disable: 4127) // conditional expression is constant
