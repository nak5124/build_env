From 3d310bc7a55124edfed9dd7b4750365587238137 Mon Sep 17 00:00:00 2001
From: Yuta NAKAI <nak5124@live.jp>
Date: Sat, 13 Jun 2015 12:51:30 +0900
Subject: [PATCH 1/3] Support building shared libraries on MinGW-w64 GCC.

---
 .gitignore              |  2 ++
 build/make/Makefile     | 19 +++++++++++++++++--
 build/make/configure.sh | 10 +++++++++-
 configure               |  9 +++++++--
 examples.mk             |  4 ++++
 libs.mk                 | 19 ++++++++++++++++++-
 6 files changed, 57 insertions(+), 6 deletions(-)

diff --git a/.gitignore b/.gitignore
index 901e8c3..2830260 100644
--- a/.gitignore
+++ b/.gitignore
@@ -2,10 +2,12 @@
 *.a
 *.asm.s
 *.d
+*.dll
 *.gcda
 *.gcno
 *.o
 *~
+vpx_dsp_rtcd.h
 .cproject
 .project
 .settings
diff --git a/build/make/Makefile b/build/make/Makefile
index f1b1cca..6da5c3d 100644
--- a/build/make/Makefile
+++ b/build/make/Makefile
@@ -321,12 +321,24 @@ define dll_template
 # for creating them.
 $(1):
 	$(if $(quiet),@echo "    [LD] $$@")
+	$(qexec)$$(LD) -shared $$(LDFLAGS) \
+            -Wl,--no-undefined -Wl,-soname,$$(SONAME) \
+            -Wl,--version-script,$$(EXPORTS_FILE) -o $$@ \
+            -Wl,--out-implib=$$(LIBVPX_SO_IMPLIB) \
+            $$(filter %.o,$$^) $$(extralibs)
+endef
+
+define dll_os2_template
+# Not using a pattern rule here because we don't want to generate empty
+# archives when they are listed as a dependency in files not responsible
+# for creating them.
+$(1):
+	$(if $(quiet),@echo "    [LD] $$@")
 	$(qexec)$$(LD) -Zdll $$(LDFLAGS) \
         -o $$@ \
         $$(filter %.o,$$^) $$(extralibs) $$(EXPORTS_FILE)
 endef
 
-
 #
 # Get current configuration
 #
@@ -384,7 +396,10 @@ LIBS=$(call enabled,LIBS)
 $(foreach lib,$(filter %_g.a,$(LIBS)),$(eval $(call archive_template,$(lib))))
 $(foreach lib,$(filter %so.$(SO_VERSION_MAJOR).$(SO_VERSION_MINOR).$(SO_VERSION_PATCH),$(LIBS)),$(eval $(call so_template,$(lib))))
 $(foreach lib,$(filter %$(SO_VERSION_MAJOR).dylib,$(LIBS)),$(eval $(call dl_template,$(lib))))
-$(foreach lib,$(filter %$(SO_VERSION_MAJOR).dll,$(LIBS)),$(eval $(call dll_template,$(lib))))
+$(foreach lib,$(filter %-$(SO_VERSION_MAJOR).dll,$(LIBS)),$(eval $(call dll_template,$(lib))))
+ifeq ($(filter os2%,$(TGT_OS)),$(TGT_OS))
+$(foreach lib,$(filter %$(SO_VERSION_MAJOR).dll,$(LIBS)),$(eval $(call dll_os2_template,$(lib))))
+endif
 
 INSTALL-LIBS=$(call cond_enabled,CONFIG_INSTALL_LIBS,INSTALL-LIBS)
 ifeq ($(MAKECMDGOALS),dist)
diff --git a/build/make/configure.sh b/build/make/configure.sh
index 907b473..9b3bc48 100644
--- a/build/make/configure.sh
+++ b/build/make/configure.sh
@@ -553,6 +553,9 @@ process_common_cmdline() {
       --prefix=*)
         prefix="${optval}"
         ;;
+      --bindir=*)
+        bindir="${optval}"
+        ;;
       --libdir=*)
         libdir="${optval}"
         ;;
@@ -560,7 +563,7 @@ process_common_cmdline() {
         [ -d "${optval}" ] || die "Not a directory: ${optval}"
         sdk_path="${optval}"
         ;;
-      --libc|--as|--prefix|--libdir|--sdk-path)
+      --libc|--as|--prefix|--bindir|--libdir|--sdk-path)
         die "Option ${opt} requires argument"
         ;;
       --help|-h)
@@ -587,8 +590,13 @@ process_cmdline() {
 post_process_common_cmdline() {
   prefix="${prefix:-/usr/local}"
   prefix="${prefix%/}"
+  bindir="${bindir:-${prefix}/bin}"
+  bindir="${bindir%/}"
   libdir="${libdir:-${prefix}/lib}"
   libdir="${libdir%/}"
+  if [ "${bindir#${prefix}}" = "${bindir}" ]; then
+    die "Bindir ${bindir} must be a subdirectory of ${prefix}"
+  fi
   if [ "${libdir#${prefix}}" = "${libdir}" ]; then
     die "Libdir ${libdir} must be a subdirectory of ${prefix}"
   fi
diff --git a/configure b/configure
index 30a5c11..8165a15 100755
--- a/configure
+++ b/configure
@@ -474,6 +474,7 @@ DIST_DIR?=${DIST_DIR}
 else
 DIST_DIR?=\$(DESTDIR)${prefix}
 endif
+BINSUBDIR=${bindir##${prefix}/}
 LIBSUBDIR=${libdir##${prefix}/}
 
 VERSION_STRING=${VERSION_STRING}
@@ -508,9 +509,13 @@ process_detect() {
         # magic happens after the command line has been parsed.
         if ! enabled linux && ! enabled os2; then
             if enabled gnu; then
-                echo "--enable-shared is only supported on ELF; assuming this is OK"
+                echo "--enable-shared is only supported on ELF and PE; assuming this is OK"
+            elif enabled win32; then
+                echo "--enable-shared is only supported on ELF and PE; assuming this is OK"
+            elif enabled win64; then
+                echo "--enable-shared is only supported on ELF and PE; assuming this is OK"
             else
-                die "--enable-shared only supported on ELF and OS/2 for now"
+                die "--enable-shared only supported on ELF and PE for now"
             fi
         fi
     fi
diff --git a/examples.mk b/examples.mk
index dfa5a65..126b3f5 100644
--- a/examples.mk
+++ b/examples.mk
@@ -285,6 +285,10 @@ CODEC_LIB=$(if $(CONFIG_DEBUG_LIBS),vpx_g,vpx)
 ifneq ($(filter darwin%,$(TGT_OS)),)
 SHARED_LIB_SUF=.dylib
 else
+ifeq ($(filter win%,$(TGT_OS))-gcc,$(TGT_OS)-$(TGT_CC))
+SHARED_LIB_SUF=.dll.a
+endif
+else
 ifneq ($(filter os2%,$(TGT_OS)),)
 SHARED_LIB_SUF=_dll.a
 else
diff --git a/libs.mk b/libs.mk
index 811a6e5..fb70d71 100644
--- a/libs.mk
+++ b/libs.mk
@@ -163,6 +163,7 @@ endif
 # tree to locations in the source/build trees.
 INSTALL_MAPS += include/vpx/% $(SRC_PATH_BARE)/vpx/%
 INSTALL_MAPS += include/vpx/% $(SRC_PATH_BARE)/vpx_ports/%
+INSTALL_MAPS += $(BINSUBDIR)/%     %
 INSTALL_MAPS += $(LIBSUBDIR)/%     %
 INSTALL_MAPS += src/%     $(SRC_PATH_BARE)/%
 ifeq ($(CONFIG_MSVS),yes)
@@ -199,6 +200,9 @@ INSTALL-LIBS-$(CONFIG_SHARED) += $(foreach p,$(VS_PLATFORMS),$(LIBSUBDIR)/$(p)/v
 INSTALL-LIBS-$(CONFIG_SHARED) += $(foreach p,$(VS_PLATFORMS),$(LIBSUBDIR)/$(p)/vpx.exp)
 endif
 else
+ifeq ($(filter win%,$(TGT_OS))-gcc,$(TGT_OS)-$(TGT_CC))
+INSTALL-LIBS-$(CONFIG_SHARED) += $(LIBSUBDIR)/libvpx.dll.a
+endif
 INSTALL-LIBS-$(CONFIG_STATIC) += $(LIBSUBDIR)/libvpx.a
 INSTALL-LIBS-$(CONFIG_DEBUG_LIBS) += $(LIBSUBDIR)/libvpx_g.a
 endif
@@ -270,6 +274,14 @@ EXPORT_FILE             := libvpx.syms
 LIBVPX_SO_SYMLINKS      := $(addprefix $(LIBSUBDIR)/, \
                              libvpx.dylib  )
 else
+ifeq ($(filter win%,$(TGT_OS)),$(TGT_OS))
+LIBVPX_SO               := libvpx-$(SO_VERSION_MAJOR).dll
+SHARED_LIB_SUF          := .dll
+EXPORT_FILE             := libvpx.ver
+LIBVPX_SO_SYMLINKS      :=
+LIBVPX_SO_IMPLIB        := libvpx.dll.a
+CLEAN-OBJS              += $(LIBVPX_SO_IMPLIB)
+else
 ifeq ($(filter os2%,$(TGT_OS)),$(TGT_OS))
 LIBVPX_SO               := libvpx$(SO_VERSION_MAJOR).dll
 SHARED_LIB_SUF          := _dll.a
@@ -285,10 +297,11 @@ LIBVPX_SO_SYMLINKS      := $(addprefix $(LIBSUBDIR)/, \
                              libvpx.so.$(SO_VERSION_MAJOR).$(SO_VERSION_MINOR))
 endif
 endif
+endif
 
 LIBS-$(CONFIG_SHARED) += $(BUILD_PFX)$(LIBVPX_SO)\
                            $(notdir $(LIBVPX_SO_SYMLINKS)) \
-                           $(if $(LIBVPX_SO_IMPLIB), $(BUILD_PFX)$(LIBVPX_SO_IMPLIB))
+                           $(if $(LIBVPX_SO_IMPLIB), $(ifneq ($(filter win%,$(TGT_OS)),$(TGT_OS)), $(BUILD_PFX)$(LIBVPX_SO_IMPLIB)))
 $(BUILD_PFX)$(LIBVPX_SO): $(LIBVPX_OBJS) $(EXPORT_FILE)
 $(BUILD_PFX)$(LIBVPX_SO): extralibs += -lm
 $(BUILD_PFX)$(LIBVPX_SO): SONAME = libvpx.so.$(SO_VERSION_MAJOR)
@@ -335,7 +348,11 @@ $(eval $(call libvpx_symlink_template,\
 
 
 INSTALL-LIBS-$(CONFIG_SHARED) += $(LIBVPX_SO_SYMLINKS)
+ifeq ($(filter win%,$(TGT_OS)),$(TGT_OS))
+INSTALL-LIBS-$(CONFIG_SHARED) += $(BINSUBDIR)/$(LIBVPX_SO)
+else
 INSTALL-LIBS-$(CONFIG_SHARED) += $(LIBSUBDIR)/$(LIBVPX_SO)
+endif
 INSTALL-LIBS-$(CONFIG_SHARED) += $(if $(LIBVPX_SO_IMPLIB),$(LIBSUBDIR)/$(LIBVPX_SO_IMPLIB))
 
 
-- 
2.5.0

