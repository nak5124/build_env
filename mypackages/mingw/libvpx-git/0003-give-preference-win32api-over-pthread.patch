diff --git a/vp9/common/vp9_mvref_common.c b/vp9/common/vp9_mvref_common.c
index 436be6c..bbbba44 100644
--- a/vp9/common/vp9_mvref_common.c
+++ b/vp9/common/vp9_mvref_common.c
@@ -73,7 +73,7 @@ static void find_mv_refs_idx(const VP9_COMMON *cm, const MACROBLOCKD *xd,
   // on windows platform. The sync here is unncessary if use_perv_frame_mvs
   // is 0. But after removing it, there will be hang in the unit test on windows
   // due to several threads waiting for a thread's signal.
-#if defined(_WIN32) && !HAVE_PTHREAD_H
+#if defined(_WIN32)
     if (cm->frame_parallel_decode && sync != NULL) {
       sync(data, mi_row);
     }
diff --git a/vp9/common/vp9_thread.h b/vp9/common/vp9_thread.h
index 12848fe..c24ef5f 100644
--- a/vp9/common/vp9_thread.h
+++ b/vp9/common/vp9_thread.h
@@ -28,7 +28,7 @@ extern "C" {
 
 #if CONFIG_MULTITHREAD
 
-#if defined(_WIN32) && !HAVE_PTHREAD_H
+#if defined(_WIN32)
 #include <errno.h>  // NOLINT
 #include <process.h>  // NOLINT
 #include <windows.h>  // NOLINT
diff --git a/vp9/decoder/vp9_dthread.c b/vp9/decoder/vp9_dthread.c
index 96a63bd..758d51e 100644
--- a/vp9/decoder/vp9_dthread.c
+++ b/vp9/decoder/vp9_dthread.c
@@ -40,7 +40,7 @@ void vp9_frameworker_signal_stats(VP9Worker *const worker) {
   FrameWorkerData *const worker_data = worker->data1;
 
 // TODO(hkuang): Fix the pthread_cond_broadcast in windows wrapper.
-#if defined(_WIN32) && !HAVE_PTHREAD_H
+#if defined(_WIN32)
   pthread_cond_signal(&worker_data->stats_cond);
 #else
   pthread_cond_broadcast(&worker_data->stats_cond);
