From ed4000e740ed46e9c9f952766d60a7f0870179c3 Mon Sep 17 00:00:00 2001
From: Yuta Nakai <nak5124@live.jp>
Date: Tue, 1 Sep 2015 21:14:14 +0900
Subject: [PATCH 2/3] Give preference win32api over pthread on MinGW-w64.

---
 vp10/common/mvref_common.c    | 2 +-
 vp10/decoder/dthread.c        | 2 +-
 vp9/common/vp9_mvref_common.c | 2 +-
 vp9/decoder/vp9_dthread.c     | 2 +-
 vpx_util/vpx_thread.h         | 2 +-
 5 files changed, 5 insertions(+), 5 deletions(-)

diff --git a/vp10/common/mvref_common.c b/vp10/common/mvref_common.c
index c0a8456..84cdde2 100644
--- a/vp10/common/mvref_common.c
+++ b/vp10/common/mvref_common.c
@@ -74,7 +74,7 @@ static void find_mv_refs_idx(const VP10_COMMON *cm, const MACROBLOCKD *xd,
   // on windows platform. The sync here is unncessary if use_perv_frame_mvs
   // is 0. But after removing it, there will be hang in the unit test on windows
   // due to several threads waiting for a thread's signal.
-#if defined(_WIN32) && !HAVE_PTHREAD_H
+#ifdef _WIN32
     if (cm->frame_parallel_decode && sync != NULL) {
       sync(data, mi_row);
     }
diff --git a/vp10/decoder/dthread.c b/vp10/decoder/dthread.c
index 4206adc..4e860bb 100644
--- a/vp10/decoder/dthread.c
+++ b/vp10/decoder/dthread.c
@@ -40,7 +40,7 @@ void vp10_frameworker_signal_stats(VPxWorker *const worker) {
   FrameWorkerData *const worker_data = worker->data1;
 
 // TODO(hkuang): Fix the pthread_cond_broadcast in windows wrapper.
-#if defined(_WIN32) && !HAVE_PTHREAD_H
+#ifdef _WIN32
   pthread_cond_signal(&worker_data->stats_cond);
 #else
   pthread_cond_broadcast(&worker_data->stats_cond);
diff --git a/vp9/common/vp9_mvref_common.c b/vp9/common/vp9_mvref_common.c
index 77d1ff4..e7ad2f8 100644
--- a/vp9/common/vp9_mvref_common.c
+++ b/vp9/common/vp9_mvref_common.c
@@ -74,7 +74,7 @@ static void find_mv_refs_idx(const VP9_COMMON *cm, const MACROBLOCKD *xd,
   // on windows platform. The sync here is unncessary if use_perv_frame_mvs
   // is 0. But after removing it, there will be hang in the unit test on windows
   // due to several threads waiting for a thread's signal.
-#if defined(_WIN32) && !HAVE_PTHREAD_H
+#ifdef _WIN32
     if (cm->frame_parallel_decode && sync != NULL) {
       sync(data, mi_row);
     }
diff --git a/vp9/decoder/vp9_dthread.c b/vp9/decoder/vp9_dthread.c
index 14a7144..bbe3946 100644
--- a/vp9/decoder/vp9_dthread.c
+++ b/vp9/decoder/vp9_dthread.c
@@ -40,7 +40,7 @@ void vp9_frameworker_signal_stats(VPxWorker *const worker) {
   FrameWorkerData *const worker_data = worker->data1;
 
 // TODO(hkuang): Fix the pthread_cond_broadcast in windows wrapper.
-#if defined(_WIN32) && !HAVE_PTHREAD_H
+#ifdef _WIN32
   pthread_cond_signal(&worker_data->stats_cond);
 #else
   pthread_cond_broadcast(&worker_data->stats_cond);
diff --git a/vpx_util/vpx_thread.h b/vpx_util/vpx_thread.h
index de63c4d..f2a66ff 100644
--- a/vpx_util/vpx_thread.h
+++ b/vpx_util/vpx_thread.h
@@ -28,7 +28,7 @@ extern "C" {
 
 #if CONFIG_MULTITHREAD
 
-#if defined(_WIN32) && !HAVE_PTHREAD_H
+#ifdef _WIN32
 #include <errno.h>  // NOLINT
 #include <process.h>  // NOLINT
 #include <windows.h>  // NOLINT
-- 
2.5.0

