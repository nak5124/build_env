From d26ef3317e9db37191f7d698ab6c4eaf4e9515f0 Mon Sep 17 00:00:00 2001
From: Yuta NAKAI <nak5124@live.jp>
Date: Sat, 6 Dec 2014 20:03:30 +0900
Subject: [PATCH 43/62] Revert "avformat/mov: strengthen some table
 allocations"

This reverts commit 5ab882d7283f57560c889919c35f2688253b1d9c.

Conflicts:
	libavformat/mov.c
---
 libavformat/mov.c | 46 +++++++++++++++++++---------------------------
 1 file changed, 19 insertions(+), 27 deletions(-)

diff --git a/libavformat/mov.c b/libavformat/mov.c
index 80d1af8..6b217ab 100644
--- a/libavformat/mov.c
+++ b/libavformat/mov.c
@@ -1667,12 +1667,14 @@ static int mov_read_stco(MOVContext *c, AVIOContext *pb, MOVAtom atom)
 
     if (!entries)
         return 0;
+    if (entries >= UINT_MAX/sizeof(int64_t))
+        return AVERROR_INVALIDDATA;
 
     if (sc->chunk_offsets)
         av_log(c->fc, AV_LOG_WARNING, "Duplicated STCO atom\n");
     av_free(sc->chunk_offsets);
     sc->chunk_count = 0;
-    sc->chunk_offsets = av_malloc_array(entries, sizeof(*sc->chunk_offsets));
+    sc->chunk_offsets = av_malloc(entries * sizeof(int64_t));
     if (!sc->chunk_offsets)
         return AVERROR(ENOMEM);
     sc->chunk_count = entries;
@@ -2292,11 +2294,13 @@ static int mov_read_stsc(MOVContext *c, AVIOContext *pb, MOVAtom atom)
 
     if (!entries)
         return 0;
+    if (entries >= UINT_MAX / sizeof(*sc->stsc_data))
+        return AVERROR_INVALIDDATA;
     if (sc->stsc_data)
         av_log(c->fc, AV_LOG_WARNING, "Duplicated STSC atom\n");
     av_free(sc->stsc_data);
     sc->stsc_count = 0;
-    sc->stsc_data = av_malloc_array(entries, sizeof(*sc->stsc_data));
+    sc->stsc_data = av_malloc(entries * sizeof(*sc->stsc_data));
     if (!sc->stsc_data)
         return AVERROR(ENOMEM);
 
@@ -2328,11 +2332,9 @@ static int mov_read_stps(MOVContext *c, AVIOContext *pb, MOVAtom atom)
     avio_rb32(pb); // version + flags
 
     entries = avio_rb32(pb);
-    if (sc->stps_data)
-        av_log(c->fc, AV_LOG_WARNING, "Duplicated STPS atom\n");
-    av_free(sc->stps_data);
-    sc->stps_count = 0;
-    sc->stps_data = av_malloc_array(entries, sizeof(*sc->stps_data));
+    if (entries >= UINT_MAX / sizeof(*sc->stps_data))
+        return AVERROR_INVALIDDATA;
+    sc->stps_data = av_malloc(entries * sizeof(*sc->stps_data));
     if (!sc->stps_data)
         return AVERROR(ENOMEM);
 
@@ -2374,13 +2376,9 @@ static int mov_read_stss(MOVContext *c, AVIOContext *pb, MOVAtom atom)
             st->need_parsing = AVSTREAM_PARSE_HEADERS;
         return 0;
     }
-    if (sc->keyframes)
-        av_log(c->fc, AV_LOG_WARNING, "Duplicated STSS atom\n");
     if (entries >= UINT_MAX / sizeof(int))
         return AVERROR_INVALIDDATA;
-    av_freep(&sc->keyframes);
-    sc->keyframe_count = 0;
-    sc->keyframes = av_malloc_array(entries, sizeof(*sc->keyframes));
+    sc->keyframes = av_malloc(entries * sizeof(int));
     if (!sc->keyframes)
         return AVERROR(ENOMEM);
 
@@ -2440,13 +2438,9 @@ static int mov_read_stsz(MOVContext *c, AVIOContext *pb, MOVAtom atom)
 
     if (!entries)
         return 0;
-    if (entries >= (UINT_MAX - 4) / field_size)
+    if (entries >= UINT_MAX / sizeof(int) || entries >= (UINT_MAX - 4) / field_size)
         return AVERROR_INVALIDDATA;
-    if (sc->sample_sizes)
-        av_log(c->fc, AV_LOG_WARNING, "Duplicated STSZ atom\n");
-    av_free(sc->sample_sizes);
-    sc->sample_count = 0;
-    sc->sample_sizes = av_malloc_array(entries, sizeof(*sc->sample_sizes));
+    sc->sample_sizes = av_malloc(entries * sizeof(int));
     if (!sc->sample_sizes)
         return AVERROR(ENOMEM);
 
@@ -2502,11 +2496,11 @@ static int mov_read_stts(MOVContext *c, AVIOContext *pb, MOVAtom atom)
     av_log(c->fc, AV_LOG_TRACE, "track[%i].stts.entries = %i\n",
             c->fc->nb_streams-1, entries);
 
-    if (sc->stts_data)
-        av_log(c->fc, AV_LOG_WARNING, "Duplicated STTS atom\n");
+    if (entries >= UINT_MAX / sizeof(*sc->stts_data))
+        return -1;
+
     av_free(sc->stts_data);
-    sc->stts_count = 0;
-    sc->stts_data = av_malloc_array(entries, sizeof(*sc->stts_data));
+    sc->stts_data = av_malloc(entries * sizeof(*sc->stts_data));
     if (!sc->stts_data)
         return AVERROR(ENOMEM);
 
@@ -2644,11 +2638,9 @@ static int mov_read_sbgp(MOVContext *c, AVIOContext *pb, MOVAtom atom)
     entries = avio_rb32(pb);
     if (!entries)
         return 0;
-    if (sc->rap_group)
-        av_log(c->fc, AV_LOG_WARNING, "Duplicated SBGP atom\n");
-    av_free(sc->rap_group);
-    sc->rap_group_count = 0;
-    sc->rap_group = av_malloc_array(entries, sizeof(*sc->rap_group));
+    if (entries >= UINT_MAX / sizeof(*sc->rap_group))
+        return AVERROR_INVALIDDATA;
+    sc->rap_group = av_malloc(entries * sizeof(*sc->rap_group));
     if (!sc->rap_group)
         return AVERROR(ENOMEM);
 
-- 
2.6.3

