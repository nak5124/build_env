From fadd5c2f9929ab3314738ddbac970513d5350989 Mon Sep 17 00:00:00 2001
From: Hendrik Leppkes <h.leppkes@gmail.com>
Date: Tue, 30 Apr 2013 15:53:35 +0200
Subject: [PATCH 16/62] flac: export vorbiscomment metadata in extradata

It can contain special metadata that informs us about the desired channel
layout for non-standard layouts, which means its crucial for correct
playback.
---
 libavformat/flacdec.c | 28 ++++++++++++++++++++++------
 1 file changed, 22 insertions(+), 6 deletions(-)

diff --git a/libavformat/flacdec.c b/libavformat/flacdec.c
index cc3ed83..ac617ce 100644
--- a/libavformat/flacdec.c
+++ b/libavformat/flacdec.c
@@ -47,7 +47,7 @@ static int flac_read_header(AVFormatContext *s)
 {
     int ret, metadata_last=0, metadata_type, metadata_size, found_streaminfo=0;
     uint8_t header[4];
-    uint8_t *buffer=NULL;
+    uint8_t *buffer=NULL,*tmp=NULL;
     FLACDecContext *flac = s->priv_data;
     AVStream *st = avformat_new_stream(s, NULL);
     if (!st)
@@ -102,14 +102,20 @@ static int flac_read_header(AVFormatContext *s)
                 RETURN_ERROR(AVERROR_INVALIDDATA);
             }
             found_streaminfo = 1;
-            st->codec->extradata      = buffer;
-            st->codec->extradata_size = metadata_size;
-            buffer = NULL;
+            st->codec->extradata      = av_malloc(metadata_size + 8 + FF_INPUT_BUFFER_PADDING_SIZE);
+            if (!st->codec->extradata) {
+              RETURN_ERROR(AVERROR(ENOMEM));
+            }
+            st->codec->extradata_size = metadata_size + 8;
+            AV_WL32(st->codec->extradata, MKTAG('f','L','a','C'));
+            memcpy(st->codec->extradata + 4, header, 4);
+            memcpy(st->codec->extradata + 8, buffer, metadata_size);
+            av_freep(&buffer);
 
             /* get sample rate and sample count from STREAMINFO header;
              * other parameters will be extracted by the parser */
-            samplerate = AV_RB24(st->codec->extradata + 10) >> 4;
-            samples    = (AV_RB64(st->codec->extradata + 13) >> 24) & ((1ULL << 36) - 1);
+            samplerate = AV_RB24(st->codec->extradata + 8 + 10) >> 4;
+            samples    = (AV_RB64(st->codec->extradata + 8 + 13) >> 24) & ((1ULL << 36) - 1);
 
             /* set time base and duration */
             if (samplerate > 0) {
@@ -173,6 +179,16 @@ static int flac_read_header(AVFormatContext *s)
             /* process supported blocks other than STREAMINFO */
             if (metadata_type == FLAC_METADATA_TYPE_VORBIS_COMMENT) {
                 AVDictionaryEntry *chmask;
+                /* append VorbisComment to extradata */
+                tmp = av_realloc(st->codec->extradata, st->codec->extradata_size + 4 + metadata_size + FF_INPUT_BUFFER_PADDING_SIZE);
+                if (!tmp) {
+                  RETURN_ERROR(AVERROR(ENOMEM));
+                }
+                st->codec->extradata = tmp;
+                tmp += st->codec->extradata_size;
+                memcpy(tmp, header, 4);
+                memcpy(tmp + 4, buffer, metadata_size);
+                st->codec->extradata_size = st->codec->extradata_size + 4 + metadata_size;
 
                 ret = ff_vorbis_comment(s, &s->metadata, buffer, metadata_size, 1);
                 if (ret < 0) {
-- 
2.6.3

