From 7e3ac331b8cd5398cf47c254589e4134af320b41 Mon Sep 17 00:00:00 2001
From: Yuta NAKAI <nak5124@live.jp>
Date: Sun, 12 Apr 2015 14:54:20 +0900
Subject: [PATCH 16/22] MinGW: Use __MINGW_PRINTF_FORMAT for
 __USE_MINGW_ANSI_STDIO.

---
 gcc/collect-utils.h                  |  4 ++++
 gcc/genmatch.c                       |  4 ++++
 include/ansidecl.h                   | 22 +++++++++++++++-------
 libgcc/config/libbid/bid_functions.h |  2 +-
 libgcc/libgcov-driver-system.c       |  6 +++++-
 lto-plugin/lto-plugin.c              |  2 +-
 6 files changed, 30 insertions(+), 10 deletions(-)

diff --git a/gcc/collect-utils.h b/gcc/collect-utils.h
index 2b3ed44..79e2789 100644
--- a/gcc/collect-utils.h
+++ b/gcc/collect-utils.h
@@ -22,7 +22,11 @@ along with GCC; see the file COPYING3.  If not see
 
 /* Provided in collect-utils.c.  */
 extern void notice (const char *, ...)
+#ifdef __MINGW32__
+  __attribute__ ((format (__MINGW_PRINTF_FORMAT, 1, 2)));
+#else
   __attribute__ ((format (printf, 1, 2)));
+#endif
 extern void fatal_signal (int);
 
 extern struct pex_obj *collect_execute (const char *, char **,
diff --git a/gcc/genmatch.c b/gcc/genmatch.c
index 560a371..ab12cf6 100644
--- a/gcc/genmatch.c
+++ b/gcc/genmatch.c
@@ -53,8 +53,12 @@ static struct line_maps *line_table;
 
 static bool
 #if GCC_VERSION >= 4001
+#ifdef __MINGW32__
+__attribute__((format (__MINGW_PRINTF_FORMAT, 6, 0)))
+#else
 __attribute__((format (printf, 6, 0)))
 #endif
+#endif
 error_cb (cpp_reader *, int errtype, int, source_location location,
 	  unsigned int, const char *msg, va_list *ap)
 {
diff --git a/include/ansidecl.h b/include/ansidecl.h
index 04d75c3..3d0b61b 100644
--- a/include/ansidecl.h
+++ b/include/ansidecl.h
@@ -197,12 +197,16 @@ So instead we use the macro below and test it against specific values.  */
    before GCC 3.3, but as of 3.3 we need to add the `nonnull'
    attribute to retain this behavior.  */
 #ifndef ATTRIBUTE_PRINTF
-#define ATTRIBUTE_PRINTF(m, n) __attribute__ ((__format__ (__printf__, m, n))) ATTRIBUTE_NONNULL(m)
-#define ATTRIBUTE_PRINTF_1 ATTRIBUTE_PRINTF(1, 2)
-#define ATTRIBUTE_PRINTF_2 ATTRIBUTE_PRINTF(2, 3)
-#define ATTRIBUTE_PRINTF_3 ATTRIBUTE_PRINTF(3, 4)
-#define ATTRIBUTE_PRINTF_4 ATTRIBUTE_PRINTF(4, 5)
-#define ATTRIBUTE_PRINTF_5 ATTRIBUTE_PRINTF(5, 6)
+# ifdef __MINGW32__
+#  define ATTRIBUTE_PRINTF(m, n) __attribute__ ((__format__ (__MINGW_PRINTF_FORMAT, m, n))) ATTRIBUTE_NONNULL(m)
+# else
+#  define ATTRIBUTE_PRINTF(m, n) __attribute__ ((__format__ (__printf__, m, n))) ATTRIBUTE_NONNULL(m)
+# endif /* __MINGW32__ */
+# define ATTRIBUTE_PRINTF_1 ATTRIBUTE_PRINTF(1, 2)
+# define ATTRIBUTE_PRINTF_2 ATTRIBUTE_PRINTF(2, 3)
+# define ATTRIBUTE_PRINTF_3 ATTRIBUTE_PRINTF(3, 4)
+# define ATTRIBUTE_PRINTF_4 ATTRIBUTE_PRINTF(4, 5)
+# define ATTRIBUTE_PRINTF_5 ATTRIBUTE_PRINTF(5, 6)
 #endif /* ATTRIBUTE_PRINTF */
 
 /* Use ATTRIBUTE_FPTR_PRINTF when the format attribute is to be set on
@@ -225,7 +229,11 @@ So instead we use the macro below and test it against specific values.  */
    NULL format specifier was allowed as of gcc 3.3.  */
 #ifndef ATTRIBUTE_NULL_PRINTF
 # if (GCC_VERSION >= 3003)
-#  define ATTRIBUTE_NULL_PRINTF(m, n) __attribute__ ((__format__ (__printf__, m, n)))
+#  ifdef __MINGW32__
+#   define ATTRIBUTE_NULL_PRINTF(m, n) __attribute__ ((__format__ (__MINGW_PRINTF_FORMAT, m, n)))
+#  else
+#   define ATTRIBUTE_NULL_PRINTF(m, n) __attribute__ ((__format__ (__printf__, m, n)))
+#  endif /* __MINGW32__ */
 # else
 #  define ATTRIBUTE_NULL_PRINTF(m, n)
 # endif /* GNUC >= 3.3 */
diff --git a/libgcc/config/libbid/bid_functions.h b/libgcc/config/libbid/bid_functions.h
index 14c9869..c21249c 100644
--- a/libgcc/config/libbid/bid_functions.h
+++ b/libgcc/config/libbid/bid_functions.h
@@ -124,7 +124,7 @@ ALIGN (16)
 #define DENORMAL_MODE           0x00000100
 #define INVALID_MODE            0x00000080
 
-#if defined LINUX || defined __GLIBC__ || defined SUNOS
+#if defined LINUX || defined __GLIBC__ || defined SUNOS || (defined(__MINGW32__) && defined(__USE_MINGW_ANSI_STDIO) && ((__USE_MINGW_ANSI_STDIO + 0) != 0))
 #define LX16  "%016llx"
 #define LX    "%llx"
 #define LD4   "%4llu"
diff --git a/libgcc/libgcov-driver-system.c b/libgcc/libgcov-driver-system.c
index 94f198d..ddb6090 100644
--- a/libgcc/libgcov-driver-system.c
+++ b/libgcc/libgcov-driver-system.c
@@ -25,7 +25,11 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
 
 /* A utility function for outputing errors.  */
 
-static int __attribute__((format(printf, 1, 2)))
+#ifdef __MINGW32__
+static int __attribute__ ((format (__MINGW_PRINTF_FORMAT, 1, 2)))
+#else
+static int __attribute__ ((format (printf, 1, 2)))
+#endif
 gcov_error (const char *fmt, ...)
 {
   int ret;
diff --git a/lto-plugin/lto-plugin.c b/lto-plugin/lto-plugin.c
index 8d957402..cb09f6c 100644
--- a/lto-plugin/lto-plugin.c
+++ b/lto-plugin/lto-plugin.c
@@ -65,7 +65,7 @@ along with this program; see the file COPYING3.  If not see
 
 /* We need to use I64 instead of ll width-specifier on native Windows.
    The reason for this is that older MS-runtimes don't support the ll.  */
-#ifdef __MINGW32__
+#if defined(__MINGW32__) && (!defined(__USE_MINGW_ANSI_STDIO) || __USE_MINGW_ANSI_STDIO == 0)
 #define PRI_LL "I64"
 #else
 #define PRI_LL "ll"
-- 
2.4.5

